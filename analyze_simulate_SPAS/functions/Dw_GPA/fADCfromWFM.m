
function ADC = fADCfromWFM(Pin,wfmInfo,auxP)
% calculate ADC for a given waveform, diffusion eigenspectra and their rotations
% can be free or restricted
% wfm has waveform info, auxP etc.
% Pin - size and D0


[l1 l2 l3] = fLw(Pin,wfmInfo,auxP,1);

PS = zeros(size(wfmInfo.PS_full,1:3));
ADC = zeros(length(auxP.cP),1); %auxP.Nwaveforms);

PS = wfmInfo.PS_full;

% ---------------- attenuation -----------------------

ADC = ...
    real(sum(l1.*PS(:,1,1)).*auxP.cP.^2.*auxP.cT.^2 + ...
    sum(l3.*PS(:,1,1)).*auxP.cP.^2.*auxP.sT.^2 + ...
    sum(l1.*PS(:,2,2)).*auxP.cP.^2 + ...
    sum(-2.*PS(:,1,3).*(l1 - l3)).*auxP.cP.*auxP.cT.*auxP.sT + ...
    sum(-2.*PS(:,1,2).*(l1 - l3)).*auxP.cP.*auxP.sP.*auxP.sT.^2 + ...
    sum(l1.*PS(:,2,2)).*auxP.cT.^2.*auxP.sP.^2 + ...
    sum(l3.*PS(:,3,3)).*auxP.cT.^2 + ...
    sum(-2.*PS(:,2,3).*(l1 - l3)).*auxP.cT.*auxP.sP.*auxP.sT + ...
    sum(l3.*PS(:,2,2)).*auxP.sP.^2.*auxP.sT.^2 + ...
    sum(l1.*PS(:,1,1)).*auxP.sP.^2 + ...
    sum(l1.*PS(:,3,3)).*auxP.sT.^2);


end